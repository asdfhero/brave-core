/* Copyright (c) 2020 The Brave Authors. All rights reserved.
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/. */

package org.chromium.chrome.browser;

import android.app.Activity;
import android.content.Context;
import android.content.SharedPreferences;

import org.chromium.base.ContextUtils;
import org.chromium.base.ApplicationStatus;
import org.chromium.base.Log;
import org.chromium.chrome.R;
import org.chromium.chrome.browser.ChromeActivity;
import org.chromium.chrome.browser.infobar.InfoBarIdentifier;
import org.chromium.chrome.browser.preferences.BravePref;
import org.chromium.chrome.browser.preferences.BravePrefServiceBridge;
import org.chromium.chrome.browser.tab.Tab;
import org.chromium.chrome.browser.ui.messages.infobar.SimpleConfirmInfoBarBuilder;
import org.chromium.chrome.browser.ntp_background_images.util.NTPUtil;

public class BraveSyncInformers {
    public static final String SYNC_V1_PREF_NAME = "SyncPreferences";
    public static final String SYNC_V1_PREF_DEVICE_ID = "DeviceId";
    public static final String SYNC_V1_DEPRECATED_URL = "https://brave.com/sync-v2-is-coming";

    public static void show() {
        boolean infobarDismissed = BravePrefServiceBridge.getInstance().getBoolean(BravePref.SYNC_DEPRECATION_WARNING_NOTICE_DISMISSED);
        if (isSyncV1Enabled() && !infobarDismissed) {
            showSyncV1WillBeDeprecated();
        }
    }

    private static boolean isSyncV1Enabled() {
        Context context = ContextUtils.getApplicationContext();
        SharedPreferences sharedPref = context.getSharedPreferences(SYNC_V1_PREF_NAME, 0);

        String deviceId = sharedPref.getString(SYNC_V1_PREF_DEVICE_ID, null);
        if (null == deviceId) {
            return false;
        }
        return true;
    }

    public static void showSyncV1WillBeDeprecated() {
        ChromeActivity activity = getChromeActivity();
        if (activity == null) return;

        Tab tab = activity.getActivityTabProvider().get();
        if (tab == null) return;

        SimpleConfirmInfoBarBuilder.create(tab.getWebContents(),
                new SimpleConfirmInfoBarBuilder.Listener() {
                    @Override
                    public void onInfoBarDismissed() {
                    }

                    @Override
                    public boolean onInfoBarButtonClicked(boolean isPrimary) {
                        return false;
                    }

                    @Override
                    public boolean onInfoBarLinkClicked() {
                        NTPUtil.openNewTab(false /* isIncognito */, SYNC_V1_DEPRECATED_URL);
                        return false;
                    }
                },
                // must be SYNC_V1_DEPRECATION_INFOBAR_DELEGATE, but now it is introduced through
                // src/brave/chromium_src/components/infobars/core/infobar_delegate.h and
                // java enums are generated by //components/infobars/core:infobar_generated_enums
                // who does not understand `brave/chromium_src`
                InfoBarIdentifier.INLINE_UPDATE_READY_INFOBAR_ANDROID,
                activity,
                R.drawable.sync_icon/* drawableId */,
                activity.getString(R.string.brave_sync_v1_deprecated_infobar_message) /* message */,
                null /* primaryText */, null /* secondaryText */,
                activity.getString(R.string.learn_more) /* linkText */,
                false /* autoExpire */);
        BravePrefServiceBridge.getInstance().setBoolean(BravePref.SYNC_DEPRECATION_WARNING_NOTICE_DISMISSED, true);
    }

    private static ChromeActivity getChromeActivity() {
        for (Activity ref : ApplicationStatus.getRunningActivities()) {
            if (!(ref instanceof ChromeActivity)) continue;
            return (ChromeActivity) ref;
        }
        return null;
    }
}
